@*CategoryItemView*@
@* Shows a category when the user is just viewing *@

@if (Category is not null)
{
    <div class="d-lg-flex gap-3 p-3">
        <div class="flex-grow-1 hstack gap-2 align-items-center"
             role="button"
             data-bs-toggle="collapse"
             data-bs-target="#collapse-@Category.Id"
             aria-expanded="false">
            <span class="badge bg-secondary rounded pill sm">
                @Category.Contacts.Count
            </span>
            <span>
                @Category.Name
            </span>
        </div>
        <div>
            <div class="mt-2 mt-lg-0">
                <span class="text-nowrap">

                </span>
                <a role="button"
                   class="me-1"
                   @onclick="() => status = Status.Editing">
                    <i class="bi bi-pencil-fill" aria-label="Edit Category"></i>
                </a>
                <a role="button" class="me-1" @onclick="() => status = Status.Deleting">
                    <i class="bi bi-trash-fill text-danger" aria-label="Delete Category"></i>
                </a>
                <a role="button" class="me-1">
                    <i class="bi bi-eye-fill" aria-label="View Category Members"></i>
                </a>
                <a role="button" class="me-1">
                    <i class="bi bi-envelope-fill" aria-label="Email Category Members"></i>
                </a>
            </div>
        </div>
    </div>
   


}

@code {
    [Parameter, EditorRequired] public CategoryDTO? Category { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<CategoryDTO> OnCategoryChange { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<int> OnCategoryDelete { get; set; }
    // [Parameter] public EventCallback OnViewMembers { get; set; }
    // [Parameter] public EventCallback OnEmailMembers { get; set; }

    //@onclick="OnViewMembers"
    //@onclick="OnEmailMembers"
    private enum Status
    {
        Viewing,
        Editing,
        Deleting

    }
    private Status status { get; set; } = Status.Viewing;
}


